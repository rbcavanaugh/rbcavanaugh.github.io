{
  "articles": [
    {
      "path": "about.html",
      "title": "About me",
      "author": [],
      "contents": "\n\n          \n          \n          Rob Cavanaugh | PhD Student\n          \n          \n          Home\n          Publications\n          R Gallery\n          Posts\n          CV\n          ☰\n          \n          \n      \n        \n          \n            About me\n          \n          \n            \n              \n\n              .rounded-circle {\n                height: 15rem!important;\n                padding-top: 20px;\n              }\n\n              I’m a third-year Ph.D. student in the Department of Communication Sciences and Disorders and TL1 pre-doctoral fellow in the Institute for Clinical Research Education at the University of Pittsburgh. Before returning to school in Pittsburgh, I worked as a clinical speech-language pathologist in Charlotte, NC in outpatient and inpatient rehabilitation settings.\n              Outside of my day job, you can find me with my wife, Amanda - somewhere outdoors, typically in a national park, and ideally on top of a mountain.\n            \n            \n              \n\n              .rounded-circle {\n                height: 15rem!important;\n                padding-top: 20px;\n              }\n\n              I’m a third-year Ph.D. student in the Department of Communication Sciences and Disorders and TL1 pre-doctoral fellow in the Institute for Clinical Research Education at the University of Pittsburgh. Before returning to school in Pittsburgh, I worked as a clinical speech-language pathologist in Charlotte, NC in outpatient and inpatient rehabilitation settings.\n              Outside of my day job, you can find me with my wife, Amanda - somewhere outdoors, typically in a national park, and ideally on top of a mountain.\n            \n          \n\n          \n            \n              \n                  \n                    \n                       Twitter\n                    \n                  \n                \n                                \n                  \n                    \n                       Github\n                    \n                  \n                \n                                \n                  \n                    \n                       Email\n                    \n                  \n                \n                              \n          \n\n          \n            \n              \n                                \n                  \n                     Twitter\n                  \n                \n                                \n                  \n                     Github\n                  \n                \n                                \n                  \n                     Email\n                  \n                \n                              \n            \n          \n        \n      \n    \n\n    \n    \n    ",
      "last_modified": "2021-04-12T11:13:57-04:00"
    },
    {
      "path": "cv.html",
      "title": "CV",
      "description": "Ongoing research and links to CV and such will go here. ",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-04-12T11:13:58-04:00"
    },
    {
      "path": "index.html",
      "title": "About",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\n\nRob Cavanaugh | PhD Student\n\n\nHome\nPublications\nR Gallery\nPosts\nCV\n☰\n\n\n  \n    \n      \n        \n        \n        \n      \n      \n    \n    \n      \n  Home\n\n\n  Publications\n\n\n  R Gallery\n\n\n  Posts\n\n\n  CV\n\n      \n  \n\n\n\n\n\n\nAbout\n\n\n\n\n\n\np{\n  font-size:16px;\n  line-height: 1.7em;\n}\n\n.title{\n display:none;\n}\n\n.navbar{\n display:none;\n}\n\n#borders{\n   border: 2px; \n   border-style: solid;\n   border-color: #546E7A;\n   padding: 5px;\n   border-radius: 5px;\n   color: #37474F;\n}\n\na{\n  color: black;\n  text-decoration: none;\n}\n\n.centering {\n  text-align: center;\n  padding-top:5px;\n}\n\n\n\n\nAbout Me\n\nI’m a third-year Ph.D. student in the Department of Communication Sciences and Disorders and TL1 pre-doctoral fellow in the Institute for Clinical Research Education at the University of Pittsburgh. Before returning to school in Pittsburgh, I worked as a clinical speech-language pathologist in Charlotte, NC in outpatient and inpatient rehabilitation settings.\nOutside of my day job, you can find me with my wife, Amanda - somewhere outdoors, typically in a national park, and ideally on top of a mountain.\n\n Twitter  Github  Email  Pitt Lab\n\n\n\n\n\nResearch\nMy long-term research agenda is to optimize everyday communication and quality of life outcomes for people with aphasia and related neurogenic communication disorders. My research strives to identify and resolve implementation gaps in aphasia rehabilitation, improve patient access to evidence-based care, and enhance treatment specification. My work seeks to use advanced statistical methods in aphasia rehabilitation research and communicate these methods effectively to researchers and clinicians. I’m also interested in statistical programming (R + python), data science, and data visualization - especially using these tools to improve science communication.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// add bootstrap table styles to pandoc tables\nfunction bootstrapStylePandocTables() {\n  $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed');\n}\n$(document).ready(function () {\n  bootstrapStylePandocTables();\n});\n\n\n\n$(document).ready(function () {\n  window.buildTabsets(\"TOC\");\n});\n\n$(document).ready(function () {\n  $('.tabset-dropdown > .nav-tabs > li').click(function () {\n    $(this).parent().toggleClass('nav-tabs-open');\n  });\n});\n\n  (function () {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src  = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n  })();\n",
      "last_modified": "2021-04-12T11:13:58-04:00"
    },
    {
      "path": "posts.html",
      "title": "Research Snippets",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-04-12T11:13:59-04:00"
    },
    {
      "path": "research.html",
      "title": "Research",
      "author": [],
      "contents": "\nPublications\nPublished\nEvans, W. S., Cavanaugh, R. B., Gravier, M. L., Autenreith, A. S., Doyle, P. J., Hula, W. D., Dickey Michael, W., & Dickey, M. W. (2020). Effects of Semantic Feature Type, Diversity, and Quantity on Semantic Feature Analysis Treatment Outcomes in Aphasia. American Journal of Speech-Language Pathology. https://doi.org/10.1044/2020_AJSLP-19-00112\nCavanaugh, R., & Haley, K. L. (2020). Subjective communication difficulties in very mild aphasia. American Journal of Speech-Language Pathology, 29(1S), 437–448. https://doi.org/10.1044/2019_AJSLP-CAC48-18-0222\nUnder Review\nEvans, W. S., Cavanaugh, R. B., Quique, Y. L., Boss, E., Starns, J. J., Hula, W. D. (manuscript under review). Playing with BEARS: Balancing Effort, Accuracy, and Response Speed in a Semantic Feature Verification Anomia Treatment Game.\nCavanaugh, R.B., Kravetz, C., Jarold, L., Quique, Y., Turner, R., Evans, W.S. (manuscript under review). Is there a research-practice dosage gap in aphasia rehabilitation?\nCavanaugh, R.B., Terhorst, L., Swiderski, A.W., Hula, W.D., Evans, W.S. (manuscript under review). A Systematic Appraisal of Individual Effect Sizes in Aphasia Single-Case Designs via Simulation\nCavanaugh, R.B., Quique, Y., Boss, E., Hula, W.D., Dickey, M.W., Evans, W.S. (manuscript under review). Active Ingredients and Mechanisms of Action in Semantic Feature Analysis\nSoftware\nKowalski, J., and Cavanaugh R.B. (2021). TBDBr: Easy Access To TalkBankDB via R API. https://github.com/TalkBank/TalkBankDB-R, https://talkbank.github.io/TalkBankDB-R/.\nSelected Presentations\nCavanaugh, R.B., Terhorst, L., Swiderski, A.W., Hula, W.D., Evans, W.S. (2020). A Systematic Appraisal of Individual Effect Sizes in Aphasia Single-Case Designs via Simulation. Abstract for poster presentation, 58th Academy of Aphasia, Philadelpha PA.\nQuique,Y., Cavanaugh, R.B., Starns, J.J., Boss, E., Hula, W.D., and Evans, W.S. (2020). Estimating the speed-accuracy tradeoff “Sweet Spot” in language performance for people with aphasia: replication and extension of a diffusion-model based approach. Abstract for poster presentation, 49th annual Clinical Aphasiology Conference, Whitefish, MT (Conference canceled).\nCavanaugh, R.B., Kravetz, C., Evans, W.S. Utilization and Disparities in Outpatient Aphasia Rehabilitation in Western Pennsylvania. (2020) Abstract for poster presentation, Pennsylvania Speech-Language Hearing Association Annual Conference, Pittsburgh, PA (Conference Canceled).\nCavanaugh, R.B., Evans, W.S., Gravier, M., Autenreith, A., Ashmore, E., Doyle, P., Hula, W., Dickey, M.W., (2019). Do the kinds of features that patients generate during Semantic Feature Analysis affect treatment outcomes? Poster presented at the 2019 Clinical Aphasiology Conference in Whitefish, MT.\n\n\n\n",
      "last_modified": "2021-04-12T11:13:59-04:00"
    },
    {
      "path": "shiny.html",
      "title": "Shiny Web-Apps and other R Projects",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  Shiny Web-Apps and other R Projects\n  \n        \n\n\n\n\n\n\n\n\n\n\nRob Cavanaugh | PhD Student\n\n\nHome\nPublications\nR Gallery\nPosts\nCV\n☰\n\n\n\n\nvar FlexDashboard = (function () {\n\n  // initialize options\n  var _options = {};\n\n  var FlexDashboard = function() {\n\n    // default options\n    _options = $.extend(_options, {\n      theme: \"cosmo\",\n      fillPage: false,\n      orientation: 'columns',\n      storyboard: false,\n      defaultFigWidth: 576,\n      defaultFigHeight: 461,\n      defaultFigWidthMobile: 360,\n      defaultFigHeightMobile: 461,\n      isMobile: false,\n      isPortrait: false,\n      resize_reload: true\n    });\n  };\n\n  function init(options) {\n\n    // extend default options\n    $.extend(true, _options, options);\n\n    // add ids to sections that don't have them (pandoc won't assign ids\n    // to e.g. sections with titles consisting of only chinese characters)\n    var nextId = 1;\n    $('.level1:not([id]),.level2:not([id]),.level3:not([id])').each(function() {\n      $(this).attr('id', 'dashboard-' + nextId++);\n    });\n\n    // find navbar items\n    var navbarItems = $('#flexdashboard-navbar');\n    if (navbarItems.length)\n      navbarItems = JSON.parse(navbarItems.html());\n    addNavbarItems(navbarItems);\n\n    // find the main dashboard container\n    var dashboardContainer = $('#dashboard-container');\n\n    // resolve mobile classes\n    resolveMobileClasses(dashboardContainer);\n\n    // one time global initialization for components\n    componentsInit(dashboardContainer);\n\n    // look for a global sidebar\n    var globalSidebar = dashboardContainer.find(\".section.level1.sidebar\");\n    if (globalSidebar.length > 0) {\n\n      // global layout for fullscreen displays\n      if (!isMobilePhone()) {\n\n         // hoist it up to the top level\n         globalSidebar.insertBefore(dashboardContainer);\n\n         // lay it out (set width/positions)\n         layoutSidebar(globalSidebar, dashboardContainer);\n\n      // tuck sidebar into first page for mobile phones\n      } else {\n\n        // convert it into a level3 section\n        globalSidebar.removeClass('sidebar');\n        globalSidebar.removeClass('level1');\n        globalSidebar.addClass('level3');\n        var h1 = globalSidebar.children('h1');\n        var h3 = $('<h3><\/h3>');\n        h3.append(h1.contents());\n        h3.insertBefore(h1);\n        h1.detach();\n\n        // move it into the first page\n        var page = dashboardContainer.find('.section.level1').first();\n        if (page.length > 0)\n          page.prepend(globalSidebar);\n      }\n    }\n\n    // look for pages to layout\n    var pages = $('div.section.level1');\n    if (pages.length > 0) {\n\n        // find the navbar and collapse on clicked\n        var navbar = $('#navbar');\n        navbar.on(\"click\", \"a[data-toggle!=dropdown]\", null, function () {\n           navbar.collapse('hide');\n        });\n\n        // envelop the dashboard container in a tab content div\n        dashboardContainer.wrapInner('<div class=\"tab-content\"><\/div>');\n\n        pages.each(function(index) {\n\n          // lay it out\n          layoutDashboardPage($(this));\n\n          // add it to the navbar\n          addToNavbar($(this), index === 0);\n\n        });\n\n    } else {\n\n      // remove the navbar and navbar button if we don't\n      // have any navbuttons\n      if (navbarItems.length === 0) {\n        $('#navbar').remove();\n        $('#navbar-button').remove();\n      }\n\n      // add the storyboard class if requested\n      if (_options.storyboard)\n        dashboardContainer.addClass('storyboard');\n\n      // layout the entire page\n      layoutDashboardPage(dashboardContainer);\n    }\n\n    // if we are in shiny we need to trigger a window resize event to\n    // force correct layout of shiny-bound-output elements\n    if (isShinyDoc())\n      $(window).trigger('resize');\n\n    // make main components visible\n    $('.section.sidebar').css('visibility', 'visible');\n    dashboardContainer.css('visibility', 'visible');\n\n    // handle location hash\n    handleLocationHash();\n\n    // intialize prism highlighting\n    initPrismHighlighting();\n\n    // record mobile and orientation state then register a handler\n    // to refresh if resize_reload is set to true and it changes\n    _options.isMobile = isMobilePhone();\n    _options.isPortrait = isPortrait();\n    if (_options.resize_reload) {\n      $(window).on('resize', function() {\n        if (_options.isMobile !== isMobilePhone() ||\n            _options.isPortrait !== isPortrait()) {\n          window.location.reload();\n        }\n      });\n    } else {\n      // if in desktop mode and resizing to mobile, make sure the heights are 100%\n      // This enforces what `fillpage.css` does for \"wider\" pages.\n      // Since we are not reloading once the page becomes small, we need to force the height to 100%\n      // This is a new situation introduced when `_options.resize_reload` is `false`\n      if (! _options.isMobile) {\n        // only add if `fillpage.css` was added in the first place\n        if (_options.fillPage) {\n          // fillpage.css\n          $(\"html,body,#dashboard\").css(\"height\", \"100%\");\n        }\n      }\n    }\n    // trigger layoutcomplete event\n    dashboardContainer.trigger('flexdashboard:layoutcomplete');\n  }\n\n  function resolveMobileClasses(dashboardContainer) {\n     // add top level layout class\n    dashboardContainer.addClass(isMobilePhone() ? 'mobile-layout' :\n                                                  'desktop-layout');\n\n    // look for .mobile sections and add .no-mobile to their peers\n    var mobileSections = $('.section.mobile');\n    mobileSections.each(function() {\n       var id = $(this).attr('id');\n       var nomobileId = id.replace(/-\\d+$/, '');\n       $('#' + nomobileId).addClass('no-mobile');\n    });\n  }\n\n  function addNavbarItems(navbarItems) {\n\n    var navbarLeft = $('ul.navbar-left');\n    var navbarRight = $('ul.navbar-right');\n\n    for (var i = 0; i<navbarItems.length; i++) {\n\n      // get the item\n      var item = navbarItems[i];\n\n      // determine the container\n      var container = null;\n      if (item.align === \"left\")\n        container = navbarLeft;\n      else\n        container = navbarRight;\n\n      // navbar menu if we have multiple items\n      if (item.items) {\n        var menu = navbarMenu(null, item.icon, item.title, container);\n        for (var j = 0; j<item.items.length; j++) {\n          var subItem = item.items[j];\n          var li = $('<li><\/li>');\n          li.append(navbarLink(subItem.icon, subItem.title, subItem.href, subItem.target));\n          menu.append(li);\n        }\n      } else {\n        var li = $('<li><\/li>');\n        li.append(navbarLink(item.icon, item.title, item.href, item.target));\n        container.append(li);\n      }\n    }\n  }\n\n  // create or get a reference to an existing dropdown menu\n  function navbarMenu(id, icon, title, container) {\n    var existingMenu = [];\n    if (id)\n      existingMenu = container.children('#' + id);\n    if (existingMenu.length > 0) {\n      return existingMenu.children('ul');\n    } else {\n      var li = $('<li><\/li>');\n      if (id)\n        li.attr('id', id);\n      li.addClass('dropdown');\n      // auto add \"Share\" title on mobile if necessary\n      if (!title && icon && (icon === \"fa-share-alt\") && isMobilePhone())\n        title = \"Share\";\n      if (title) {\n        title = title + ' <span class=\"caret\"><\/span>';\n      }\n      var a = navbarLink(icon, title, \"#\");\n      a.addClass('dropdown-toggle');\n      a.attr('data-toggle', 'dropdown');\n      a.attr('role', 'button');\n      a.attr('aria-expanded', 'false');\n      li.append(a);\n      var ul = $('<ul class=\"dropdown-menu\"><\/ul>');\n      ul.attr('role', 'menu');\n      li.append(ul);\n      container.append(li);\n      return ul;\n    }\n  }\n\n  function addToNavbar(page, active) {\n\n    // capture the id and data-icon attribute (if any)\n    var id = page.attr('id');\n    var icon = page.attr('data-icon');\n    var navmenu = page.attr('data-navmenu');\n\n    // get hidden state (transfer this to navbar)\n    var hidden = page.hasClass('hidden');\n    page.removeClass('hidden');\n\n    // sanitize the id for use with bootstrap tabs\n    id = id.replace(/[.\\/?&!#<>]/g, '').replace(/\\s/g, '_');\n    page.attr('id', id);\n\n    // get the wrapper\n    var wrapper = page.closest('.dashboard-page-wrapper');\n\n    // move the id to the wrapper\n    page.removeAttr('id');\n    wrapper.attr('id', id);\n\n    // add the tab-pane class to the wrapper\n    wrapper.addClass('tab-pane');\n    if (active)\n      wrapper.addClass('active');\n\n    // get a reference to the h1, discover its inner contens, then detach it\n    var h1 = wrapper.find('h1').first();\n    var title = h1.contents();\n    h1.detach();\n\n    // create a navbar item\n    var li = $('<li><\/li>');\n    var a = navbarLink(icon, title, '#' + id);\n    a.attr('data-toggle', 'tab');\n    li.append(a);\n\n    // add it to the navbar (or navbar menu if specified)\n    var container = $('ul.navbar-left');\n    if (navmenu) {\n      var menuId = navmenu.replace(/\\s+/g, '');\n      var menu = navbarMenu(menuId, null, navmenu, container);\n      menu.append(li);\n    } else {\n      container.append(li);\n    }\n\n    // hide it if requested\n    if (hidden)\n      li.addClass('hidden');\n  }\n\n  function navbarLink(icon, title, href, target) {\n\n    var a = $('<a><\/a>');\n    if (icon) {\n\n      // get the name of the icon set and icon\n      var dashPos = icon.indexOf(\"-\");\n      var iconSet = null;\n      var iconSplit = icon.split(\" \");\n      if (iconSplit.length > 1) {\n        iconSet = iconSplit[0];\n        icon = iconSplit.slice(1).join(\" \");\n      } else {\n        iconSet = icon.substring(0, dashPos);\n      }\n      var iconName = icon.substring(dashPos + 1);\n\n      // create the icon\n      var iconElement = $('<span class=\"' + iconSet + ' ' + icon + '\"><\/span>');\n      if (title)\n        iconElement.css('margin-right', '7px');\n      a.append(iconElement);\n      // if href is null see if we can auto-generate based on icon (e.g. social)\n      if (!href)\n        maybeGenerateLinkFromIcon(iconName, a);\n    }\n    if (title)\n      a.append(title);\n\n    // add the href.\n    if (href) {\n      if (href === \"source_embed\") {\n        a.attr('href', '#');\n        a.attr('data-featherlight', \"#flexdashboard-source-code\");\n        a.featherlight({\n            beforeOpen: function(event){\n              $('body').addClass('unselectable');\n            },\n            afterClose: function(event){\n              $('body').removeClass('unselectable');\n            }\n        });\n      } else {\n        a.attr('href', href);\n      }\n    }\n\n    // add the arget\n    if (target)\n      a.attr('target', target);\n\n    return a;\n  }\n\n  // auto generate a link from an icon name (e.g. twitter) when possible\n  function maybeGenerateLinkFromIcon(iconName, a) {\n\n     var serviceLinks = {\n      \"twitter\": \"https://twitter.com/share?text=\" + encodeURIComponent(document.title) + \"&url=\"+encodeURIComponent(location.href),\n      \"facebook\": \"https://www.facebook.com/sharer/sharer.php?s=100&p[url]=\"+encodeURIComponent(location.href),\n      \"linkedin\": \"https://www.linkedin.com/shareArticle?mini=true&url=\"+encodeURIComponent(location.href) + \"&title=\" + encodeURIComponent(document.title),\n      \"pinterest\": \"https://pinterest.com/pin/create/link/?url=\"+encodeURIComponent(location.href) + \"&description=\" + encodeURIComponent(document.title)\n    };\n\n    var makeSocialLink = function(a, href) {\n      a.attr('href', '#');\n      a.on('click', function(e) {\n        e.preventDefault();\n        window.open(href);\n      });\n    };\n\n    $.each(serviceLinks, function(key, value) {\n      if (iconName.indexOf(key) !== -1)\n        makeSocialLink(a, value);\n    });\n  }\n\n  // layout a dashboard page\n  function layoutDashboardPage(page) {\n\n    // use a page wrapper so that free form content above the\n    // dashboard appears at the top rather than the side (as it\n    // would without the wrapper in a column orientation)\n    var wrapper = $('<div class=\"dashboard-page-wrapper\"><\/div>');\n    page.wrap(wrapper);\n\n    // if there are no level2 or level3 headers synthesize a level3\n    // header to contain the (e.g. frame it, scroll container, etc.)\n    var headers = page.find('h2,h3');\n    if (headers.length === 0)\n      page.wrapInner('<div class=\"section level3\"><\/div>');\n\n    // hoist up any content before level 2 or level 3 headers\n    var children = page.children();\n    children.each(function(index) {\n      if ($(this).hasClass('level2') || $(this).hasClass('level3'))\n        return false;\n      $(this).insertBefore(page);\n    });\n\n    // determine orientation and fillPage behavior for distinct media\n    var orientation, fillPage, storyboard;\n\n    // media: mobile phone\n    if (isMobilePhone()) {\n\n      // if there is a sidebar we need to ensure it's content\n      // is properly framed as an h3\n      var sidebar = page.find('.section.sidebar');\n      sidebar.removeClass('sidebar');\n      sidebar.wrapInner('<div class=\"section level3\"><\/div>');\n      var h2 = sidebar.find('h2');\n      var h3 = $('<h3><\/h3>');\n      h3.append(h2.contents());\n      h3.insertBefore(h2);\n      h2.detach();\n\n      // wipeout h2 elements then enclose them in a single h2\n      var level2 = page.find('div.section.level2');\n      level2.each(function() {\n        level2.children('h2').remove();\n        level2.children().unwrap();\n      });\n      page.wrapInner('<div class=\"section level2\"><\/div>');\n\n      // substitute mobile images\n      if (isPortrait()) {\n        var mobileFigures = $('img.mobile-figure');\n        mobileFigures.each(function() {\n          // get the src (might be base64 encoded)\n          var src = $(this).attr('src');\n\n          // find it's peer\n          var id = $(this).attr('data-mobile-figure-id');\n          var img = $('img[data-figure-id=' + id + \"]\");\n          img.attr('src', src)\n             .attr('width', _options.defaultFigWidthMobile)\n             .attr('height', _options.defaultFigHeightMobile);\n        });\n      }\n\n      // hoist storyboard commentary into it's own section\n      if (page.hasClass('storyboard')) {\n        var commentaryHR = page.find('div.section.level3 hr');\n        commentaryHR.each(function() {\n          var commentary = $(this).nextAll().detach();\n          var commentarySection = $('<div class=\"section level3\"><\/div>');\n          commentarySection.append(commentary);\n          commentarySection.insertAfter($(this).closest('div.section.level3'));\n          $(this).remove();\n        });\n      }\n\n      // force a non full screen layout by columns\n      orientation = _options.orientation = 'columns';\n      fillPage = _options.fillPage = false;\n      storyboard = _options.storyboard = false;\n\n    // media: desktop\n    } else {\n\n      // determine orientation\n      orientation = page.attr('data-orientation');\n      if (orientation !== 'rows' && orientation != 'columns')\n        orientation = _options.orientation;\n\n      // determine storyboard mode\n      storyboard = page.hasClass('storyboard');\n\n      // fillPage based on options (force for storyboard)\n      fillPage = _options.fillPage || storyboard;\n\n      // handle sidebar\n      var sidebar = page.find('.section.level2.sidebar');\n      if (sidebar.length > 0)\n        layoutSidebar(sidebar, page);\n    }\n\n    // give it and it's parent divs height: 100% if we are in fillPage mode\n    if (fillPage) {\n      page.addClass('vertical-layout-fill');\n      page.css('height', '100%');\n      page.parents('div').css('height', '100%');\n    } else {\n      page.addClass('vertical-layout-scroll');\n    }\n\n    // perform the layout\n    if (storyboard)\n      layoutPageAsStoryboard(page);\n    else if (orientation === 'rows')\n      layoutPageByRows(page, fillPage);\n    else if (orientation === 'columns')\n      layoutPageByColumns(page, fillPage);\n  }\n\n  function layoutSidebar(sidebar, content) {\n\n    // get it out of the header hierarchy\n    sidebar = sidebar.first();\n    if (sidebar.hasClass('level1')) {\n      sidebar.removeClass('level1');\n      sidebar.children('h1').remove();\n    } else if (sidebar.hasClass('level2')) {\n      sidebar.removeClass('level2');\n      sidebar.children('h2').remove();\n    }\n\n    // determine width\n    var sidebarWidth = isTablet() ? 220 : 250;\n    var dataWidth = parseInt(sidebar.attr('data-width'));\n    if (dataWidth)\n      sidebarWidth = dataWidth;\n\n    // set the width and shift the page right to accomodate the sidebar\n    sidebar.css('width', sidebarWidth + 'px');\n    content.css('padding-left', sidebarWidth + 'px');\n\n    // wrap it's contents in a form\n    sidebar.wrapInner($('<form><\/form>'));\n  }\n\n  function layoutPageAsStoryboard(page) {\n\n    // create storyboard navigation\n    var nav = $('<div class=\"storyboard-nav\"><\/div>');\n\n    // add navigation buttons\n    var prev = $('<button class=\"sbprev\"><i class=\"fa fa-angle-left\"><\/i><\/button>');\n    nav.append(prev);\n    var next= $('<button class=\"sbnext\"><i class=\"fa fa-angle-right\"><\/i><\/button>');\n    nav.append(next);\n\n    // add navigation frame\n    var frameList = $('<div class=\"sbframelist\"><\/div>');\n    nav.append(frameList);\n    var ul = $('<ul><\/ul>');\n    frameList.append(ul);\n\n     // find all the level3 sections (those are the storyboard frames)\n    var frames = page.find('div.section.level3');\n    frames.each(function() {\n\n      // mark it\n      $(this).addClass('sbframe');\n\n      // divide it into chart content and (optional) commentary\n      $(this).addClass('dashboard-column-orientation');\n\n      // stuff the chart into it's own div w/ flex\n      $(this).wrapInner('<div class=\"sbframe-component\"><\/div>');\n      setFlex($(this), 1);\n      var frame = $(this).children('.sbframe-component');\n\n      // extract the title from the h3\n      var li = $('<li><\/li>');\n      var h3 = frame.children('h3');\n      li.append(h3.contents());\n      h3.detach();\n      ul.append(li);\n\n      // extract commentary\n      var hr = frame.children('hr');\n      if (hr.length) {\n        var commentary = hr.nextAll().detach();\n        hr.remove();\n        var commentaryFrame = $('<div class=\"sbframe-commentary\"><\/div>');\n        commentaryFrame.addClass('flowing-content-shim');\n        commentaryFrame.addClass('flowing-content-container');\n        commentaryFrame.append(commentary);\n        $(this).append(commentaryFrame);\n\n        // look for a data-commentary-width attribute\n        var commentaryWidth = $(this).attr('data-commentary-width');\n        if (commentaryWidth)\n          commentaryFrame.css('width', commentaryWidth + 'px');\n      }\n\n      // layout the chart (force flex)\n      var result = layoutChart(frame, true);\n\n      // ice the notes if there are none\n      if (!result.notes)\n        frame.find('.chart-notes').remove();\n\n      // set flex on chart\n      setFlex(frame, 1);\n    });\n\n    // create a div to hold all the frames\n    var frameContent = $('<div class=\"sbframe-content\"><\/div>');\n    frameContent.addClass('dashboard-row-orientation');\n    frameContent.append(frames.detach());\n\n    // row orientation to stack nav and frame content\n    page.addClass('dashboard-row-orientation');\n    page.append(nav);\n    page.append(frameContent);\n    setFlex(frameContent, 1);\n\n    // initialize sly\n    var sly = new Sly(frameList, {\n    \t\thorizontal: true,\n    \t\titemNav: 'basic',\n    \t\tsmart: true,\n    \t\tactivateOn: 'click',\n    \t\tstartAt: 0,\n    \t\tscrollBy: 1,\n    \t\tactivatePageOn: 'click',\n    \t\tspeed: 200,\n    \t\tmoveBy: 600,\n    \t\tdragHandle: true,\n    \t\tdynamicHandle: true,\n    \t\tclickBar: true,\n    \t\tkeyboardNavBy: 'items',\n    \t\tnext: next,\n    \t\tprev: prev\n    \t}).init();\n\n    // make first frame active\n    frames.removeClass('active');\n    frames.first().addClass('active');\n\n    // subscribe to frame changed events\n    sly.on('active', function (eventName, itemIndex) {\n      frames.removeClass('active');\n      frames.eq(itemIndex).addClass('active')\n                          .trigger('shown');\n    });\n  }\n\n  function layoutPageByRows(page, fillPage) {\n\n    // row orientation\n    page.addClass('dashboard-row-orientation');\n\n    // find all the level2 sections (those are the rows)\n    var rows = page.find('div.section.level2');\n\n    // if there are no level2 sections then treat the\n    // entire page as if it's a level 2 section\n    if (rows.length === 0) {\n      page.wrapInner('<div class=\"section level2\"><\/div>');\n      rows = page.find('div.section.level2');\n    }\n\n    rows.each(function () {\n\n      // flags\n      var haveNotes = false;\n      var haveFlexHeight = true;\n\n      // remove the h2\n      $(this).children('h2').remove();\n\n      // check for a tabset\n      var isTabset = $(this).hasClass('tabset');\n      if (isTabset)\n        layoutTabset($(this));\n\n      // give it row layout semantics if it's not a tabset\n      if (!isTabset)\n        $(this).addClass('dashboard-row');\n\n      // find all of the level 3 subheads\n      var columns = $(this).find('div.section.level3');\n\n      // determine figureSizes sizes\n      var figureSizes = chartFigureSizes(columns);\n\n      // fixup the columns\n      columns.each(function(index) {\n\n        // layout the chart (force flex if we are in a tabset)\n        var result = layoutChart($(this), isTabset);\n\n        // update flexHeight state\n        if (!result.flex)\n          haveFlexHeight = false;\n\n        // update state\n        if (result.notes)\n          haveNotes = true;\n\n        // set the column flex based on the figure width\n        // (value boxes will just get the default figure width)\n        var chartWidth = figureSizes[index].width;\n        setFlex($(this), chartWidth + ' ' + chartWidth + ' 0px');\n\n      });\n\n      // remove empty chart note divs\n      if (isTabset)\n        $(this).find('.chart-notes').filter(function() {\n            return $(this).html() === \"&nbsp;\";\n        }).remove();\n      if (!haveNotes)\n        $(this).find('.chart-notes').remove();\n\n       // make it a flexbox row\n      if (haveFlexHeight)\n        $(this).addClass('dashboard-row-flex');\n\n      // now we can set the height on all the wrappers (based on maximum\n      // figure height + room for title and notes, or data-height on the\n      // container if specified). However, don't do this if there is\n      // no flex on any of the constituent columns\n      var flexHeight = null;\n      var dataHeight = parseInt($(this).attr('data-height'));\n      if (dataHeight)\n        flexHeight = adjustedHeight(dataHeight, columns.first());\n      else if (haveFlexHeight)\n        flexHeight = maxChartHeight(figureSizes, columns);\n      if (flexHeight) {\n        if (fillPage)\n          setFlex($(this), flexHeight + ' ' + flexHeight + ' 0px');\n        else {\n          $(this).css('height', flexHeight + 'px');\n          setFlex($(this), '0 0 ' + flexHeight + 'px');\n        }\n      }\n\n    });\n  }\n\n  function layoutPageByColumns(page, fillPage) {\n\n    // column orientation\n    page.addClass('dashboard-column-orientation');\n\n    // find all the level2 sections (those are the columns)\n    var columns = page.find('div.section.level2');\n\n    // if there are no level2 sections then treat the\n    // entire page as if it's a level 2 section\n    if (columns.length === 0) {\n      page.wrapInner('<div class=\"section level2\"><\/div>');\n      columns = page.find('div.section.level2');\n    }\n\n    // layout each column\n    columns.each(function (index) {\n\n      // remove the h2\n      $(this).children('h2').remove();\n\n      // make it a flexbox column\n      $(this).addClass('dashboard-column');\n\n      // check for a tabset\n      var isTabset = $(this).hasClass('tabset');\n      if (isTabset)\n        layoutTabset($(this));\n\n      // find all the h3 elements\n      var rows = $(this).find('div.section.level3');\n\n      // get the figure sizes for the rows\n      var figureSizes = chartFigureSizes(rows);\n\n      // column flex is the max row width (or data-width if specified)\n      var flexWidth;\n      var dataWidth = parseInt($(this).attr('data-width'));\n      if (dataWidth)\n        flexWidth = dataWidth;\n      else\n        flexWidth = maxChartWidth(figureSizes);\n      setFlex($(this), flexWidth + ' ' + flexWidth + ' 0px');\n\n      // layout each chart\n      rows.each(function(index) {\n\n        // perform the layout\n        var result = layoutChart($(this), false);\n\n        // ice the notes if there are none\n        if (!result.notes)\n          $(this).find('.chart-notes').remove();\n\n        // set flex height based on figHeight, then adjust\n        if (result.flex) {\n          var chartHeight = figureSizes[index].height;\n          chartHeight = adjustedHeight(chartHeight, $(this));\n          if (fillPage)\n            setFlex($(this), chartHeight + ' ' + chartHeight + ' 0px');\n          else {\n            $(this).css('height', chartHeight + 'px');\n            setFlex($(this), chartHeight + ' ' + chartHeight + ' ' + chartHeight + 'px');\n          }\n        }\n      });\n    });\n  }\n\n  function chartFigureSizes(charts) {\n\n    // sizes\n    var figureSizes = new Array(charts.length);\n\n    // check each chart\n    charts.each(function(index) {\n\n      // start with default\n      figureSizes[index] = {\n        width: _options.defaultFigWidth,\n        height: _options.defaultFigHeight\n      };\n\n      // look for data-height or data-width then knit options\n      var dataWidth = parseInt($(this).attr('data-width'));\n      var dataHeight = parseInt($(this).attr('data-height'));\n      var knitrOptions = $(this).find('.knitr-options:first');\n      var knitrWidth, knitrHeight;\n      if (knitrOptions) {\n        knitrWidth = parseInt(knitrOptions.attr('data-fig-width'));\n        knitrHeight =  parseInt(knitrOptions.attr('data-fig-height'));\n      }\n\n      // width\n      if (dataWidth)\n        figureSizes[index].width = dataWidth;\n      else if (knitrWidth)\n        figureSizes[index].width = knitrWidth;\n\n      // height\n      if (dataHeight)\n        figureSizes[index].height = dataHeight;\n      else if (knitrHeight)\n        figureSizes[index].height = knitrHeight;\n    });\n\n    // return sizes\n    return figureSizes;\n  }\n\n  function maxChartHeight(figureSizes, charts) {\n\n    // first compute the maximum height\n    var maxHeight = _options.defaultFigHeight;\n    for (var i = 0; i<figureSizes.length; i++)\n      if (figureSizes[i].height > maxHeight)\n        maxHeight = figureSizes[i].height;\n\n    // now add offests for chart title and chart notes\n    if (charts.length)\n      maxHeight = adjustedHeight(maxHeight, charts.first());\n\n    return maxHeight;\n  }\n\n  function adjustedHeight(height, chart) {\n    if (chart.length > 0) {\n      var chartTitle = chart.find('.chart-title');\n      if (chartTitle.length)\n        height += chartTitle.first().outerHeight();\n      var chartNotes = chart.find('.chart-notes');\n      if (chartNotes.length)\n        height += chartNotes.first().outerHeight();\n    }\n    return height;\n  }\n\n  function maxChartWidth(figureSizes) {\n    var maxWidth = _options.defaultFigWidth;\n    for (var i = 0; i<figureSizes.length; i++)\n      if (figureSizes[i].width > maxWidth)\n        maxWidth = figureSizes[i].width;\n    return maxWidth;\n  }\n\n  // layout a chart\n  function layoutChart(chart, forceFlex) {\n\n    // state to return\n    var result = {\n      notes: false,\n      flex: false\n    };\n\n    // extract the title\n    var title = extractTitle(chart);\n\n    // find components that apply to this container\n    var components = componentsFind(chart);\n\n    // if it's a custom component then call it and return\n    var customComponents = componentsCustom(components);\n    if (customComponents.length) {\n      componentsLayout(customComponents, title, chart);\n      result.notes = false;\n      result.flex = forceFlex || componentsFlex(customComponents);\n      return result;\n    }\n\n    // put all the content in a chart wrapper div\n    chart.addClass('chart-wrapper');\n    chart.wrapInner('<div class=\"chart-stage\"><\/div>');\n    var chartContent = chart.children('.chart-stage');\n\n    // flex the content if appropriate\n    result.flex = forceFlex || componentsFlex(components);\n    if (result.flex) {\n      // add flex classes\n      chart.addClass('chart-wrapper-flex');\n      chartContent.addClass('chart-stage-flex');\n\n      // additional shim to break out of flexbox sizing\n      chartContent.wrapInner('<div class=\"chart-shim\"><\/div>');\n      chartContent = chartContent.children('.chart-shim');\n    }\n\n    // set custom data-padding attribute\n    var pad = chart.attr('data-padding');\n    if (pad) {\n      if (pad === \"0\")\n        chart.addClass('no-padding');\n      else {\n        pad = pad + 'px';\n        chartContent.css('left', pad)\n                    .css('top', pad)\n                    .css('right', pad)\n                    .css('bottom', pad)\n      }\n    }\n\n    // call compoents\n    componentsLayout(components, title, chartContent);\n\n    // also activate components on shiny output\n    findShinyOutput(chartContent).on('shiny:value',\n      function(event) {\n        var element = $(event.target);\n        setTimeout(function() {\n\n          // see if we opted out of flex based on our output (for shiny\n          // we can't tell what type of output we have until after the\n          // value is bound)\n          var components = componentsFind(element);\n          var flex = forceFlex || componentsFlex(components);\n          if (!flex) {\n            chart.css('height', \"\");\n            setFlex(chart, \"\");\n            chart.removeClass('chart-wrapper-flex');\n            chartContent.removeClass('chart-stage-flex');\n            chartContent.children().unwrap();\n          }\n\n          // perform layout\n          componentsLayout(components, title, element.parent());\n        }, 10);\n      });\n\n    // add the title\n    var chartTitle = $('<div class=\"chart-title\"><\/div>');\n    chartTitle.append(title);\n    chart.prepend(chartTitle);\n\n    // add the notes section\n    var chartNotes = $('<div class=\"chart-notes\"><\/div>');\n    chartNotes.html('&nbsp;');\n    chart.append(chartNotes);\n\n    // attempt to extract notes if we have a component\n    if (components.length)\n      result.notes = extractChartNotes(chartContent, chartNotes);\n\n    // return result\n    return result;\n  }\n\n  // build a tabset from a section div with the .tabset class\n  function layoutTabset(tabset) {\n\n    // check for fade option\n    var fade = tabset.hasClass(\"tabset-fade\");\n    var navClass = \"nav-tabs\";\n\n    // determine the heading level of the tabset and tabs\n    var match = tabset.attr('class').match(/level(\\d) /);\n    if (match === null)\n      return;\n    var tabsetLevel = Number(match[1]);\n    var tabLevel = tabsetLevel + 1;\n\n    // find all subheadings immediately below\n    var tabs = tabset.find(\"div.section.level\" + tabLevel);\n    if (!tabs.length)\n      return;\n\n    // create tablist and tab-content elements\n    var tabList = $('<ul class=\"nav ' + navClass + '\" role=\"tablist\"><\/ul>');\n    $(tabs[0]).before(tabList);\n    var tabContent = $('<div class=\"tab-content\"><\/div>');\n    $(tabs[0]).before(tabContent);\n\n    // build the tabset\n    tabs.each(function(i) {\n\n      // get the tab div\n      var tab = $(tabs[i]);\n\n      // get the id then sanitize it for use with bootstrap tabs\n      var id = tab.attr('id');\n\n      // sanitize the id for use with bootstrap tabs\n      id = id.replace(/[.\\/?&!#<>]/g, '').replace(/\\s/g, '_');\n      tab.attr('id', id);\n\n      // get the heading element within it and grab it's text\n      var heading = tab.find('h' + tabLevel + ':first');\n      var headingDom = heading.contents();\n\n      // build and append the tab list item\n      var a = $('<a role=\"tab\" data-toggle=\"tab\"><\/a>');\n      a.append(headingDom);\n      a.attr('href', '#' + id);\n      a.attr('aria-controls', id);\n      var li = $('<li role=\"presentation\"><\/li>');\n      li.append(a);\n      if (i === 0)\n        li.attr('class', 'active');\n      tabList.append(li);\n\n      // set it's attributes\n      tab.attr('role', 'tabpanel');\n      tab.addClass('tab-pane');\n      tab.addClass('tabbed-pane');\n      tab.addClass('no-title');\n      if (fade)\n        tab.addClass('fade');\n      if (i === 0) {\n        tab.addClass('active');\n        if (fade)\n          tab.addClass('in');\n      }\n\n      // move it into the tab content div\n      tab.detach().appendTo(tabContent);\n    });\n\n    // add nav-tabs-custom\n    tabset.addClass('nav-tabs-custom');\n\n    // internal layout is dashboard-column with tab-content flexing\n    tabset.addClass('dashboard-column');\n    setFlex(tabContent, 1);\n  }\n\n  // one time global initialization for components\n  function componentsInit(dashboardContainer) {\n    for (var i=0; i<window.FlexDashboardComponents.length; i++) {\n      var component = window.FlexDashboardComponents[i];\n      if (component.init)\n        component.init(dashboardContainer);\n    }\n  }\n\n  // find components that apply within a container\n  function componentsFind(container) {\n\n    // look for components\n    var components = [];\n    for (var i=0; i<window.FlexDashboardComponents.length; i++) {\n      var component = window.FlexDashboardComponents[i];\n      if (component.find(container).length)\n        components.push(component);\n    }\n\n    // if there were none then use a special flowing content component\n    // that just adds a scrollbar in fillPage mode\n    if (components.length == 0) {\n      components.push({\n        find: function(container) {\n          return container;\n        },\n\n        flex: function(fillPage) {\n          return fillPage;\n        },\n\n        layout: function(title, container, element, fillPage) {\n          if (fillPage) {\n            container.addClass('flowing-content-shim');\n            container.addClass('flowing-content-container');\n          }\n        }\n      });\n    }\n\n    return components;\n  }\n\n  // if there is a custom component then pick it out\n  function componentsCustom(components) {\n    var customComponent = [];\n    for (var i=0; i<components.length; i++)\n      if (components[i].type === \"custom\") {\n        customComponent.push(components[i]);\n        break;\n      }\n    return customComponent;\n  }\n\n  // query all components for flex\n  function componentsFlex(components) {\n\n    // no components at all means no flex\n    if (components.length === 0)\n      return false;\n\n    // otherwise query components (assume true unless we see false)\n    var isMobile = isMobilePhone();\n    for (var i=0; i<components.length; i++)\n      if (components[i].flex && !components[i].flex(_options.fillPage))\n        return false;\n    return true;\n  }\n\n  // layout all components\n  function componentsLayout(components, title, container) {\n    var isMobile = isMobilePhone();\n    for (var i=0; i<components.length; i++) {\n      var element = components[i].find(container);\n      if (components[i].layout) {\n        // call layout (don't call other components if it returns false)\n        var result = components[i].layout(title, container, element, _options.fillPage);\n        if (result === false)\n          return;\n      }\n    }\n  }\n\n  // get a reference to the h3, discover it's inner html, and remove it\n  function extractTitle(container) {\n    var h3 = container.children('h3').first();\n    var title = '';\n    if (!container.hasClass('no-title'))\n      title = h3.contents();\n    h3.detach();\n    return title;\n  }\n\n  // extract chart notes\n  function extractChartNotes(chartContent, chartNotes) {\n    // look for a terminating blockquote or image caption\n    var blockquote = chartContent.children('blockquote:last-child');\n    var caption = chartContent.children('div.image-container')\n                              .children('p.caption');\n    if (blockquote.length) {\n      chartNotes.empty().append(blockquote.children('p:first-child').contents());\n      blockquote.remove();\n      return true;\n    } else if (caption.length) {\n      chartNotes.empty().append(caption.contents());\n      caption.remove();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function findShinyOutput(chartContent) {\n    return chartContent.find('.shiny-text-output, .shiny-html-output');\n  }\n\n  // safely detect rendering on a mobile phone\n  function isMobilePhone() {\n    try\n    {\n      return ! window.matchMedia(\"only screen and (min-width: 768px)\").matches;\n    }\n    catch(e) {\n      return false;\n    }\n  }\n\n  function isFillPage() {\n    return _options.fillPage;\n  }\n\n  // detect portrait mode\n  function isPortrait() {\n    return ($(window).width() < $(window).height());\n  }\n\n  // safely detect rendering on a tablet\n  function isTablet() {\n    try\n    {\n      return window.matchMedia(\"only screen and (min-width: 769px) and (max-width: 992px)\").matches;\n    }\n    catch(e) {\n      return false;\n    }\n  }\n\n  // test whether this is a shiny doc\n  function isShinyDoc() {\n    return (typeof(window.Shiny) !== \"undefined\" && !!window.Shiny.outputBindings);\n  }\n\n  // set flex using vendor specific prefixes\n  function setFlex(el, flex) {\n    el.css('-webkit-box-flex', flex)\n      .css('-webkit-flex', flex)\n      .css('-ms-flex', flex)\n      .css('flex', flex);\n  }\n\n  // support bookmarking of pages\n  function handleLocationHash() {\n\n    // restore tab/page from bookmark\n    var hash = window.decodeURIComponent(window.location.hash);\n    if (hash.length > 0)\n      $('ul.nav a[href=\"' + hash + '\"]').tab('show');\n    FlexDashboardUtils.manageActiveNavbarMenu();\n\n    // navigate to a tab when the history changes\n    window.addEventListener(\"popstate\", function(e) {\n      var hash = window.decodeURIComponent(window.location.hash);\n      var activeTab = $('ul.nav a[href=\"' + hash + '\"]');\n      if (activeTab.length) {\n        activeTab.tab('show');\n      } else {\n        $('ul.nav a:first').tab('show');\n      }\n      FlexDashboardUtils.manageActiveNavbarMenu();\n    });\n\n    // add a hash to the URL when the user clicks on a tab/page\n    $('.navbar-nav a[data-toggle=\"tab\"]').on('click', function(e) {\n      var baseUrl = FlexDashboardUtils.urlWithoutHash(window.location.href);\n      var hash = FlexDashboardUtils.urlHash($(this).attr('href'));\n      var href = baseUrl + hash;\n      FlexDashboardUtils.setLocation(href);\n    });\n\n    // handle clicks of other links that should activate pages\n    var navPages = $('ul.navbar-nav li a[data-toggle=tab]');\n    navPages.each(function() {\n      var href =  $(this).attr('href');\n      var links = $('a[href=\"' + href + '\"][data-toggle!=tab]');\n      links.each(function() {\n        $(this).on('click', function(e) {\n          window.FlexDashboardUtils.showPage(href);\n        });\n      });\n    });\n  }\n\n  // tweak Prism highlighting\n  function initPrismHighlighting() {\n\n    if (window.Prism) {\n      Prism.languages.insertBefore('r', 'comment', {\n        'heading': [\n          {\n            // title 1\n        \t  // =======\n\n        \t  // title 2\n        \t  // -------\n        \t  pattern: /\\w+.*(?:\\r?\\n|\\r)(?:====+|----+)/,\n            alias: 'operator'\n          },\n          {\n            // ### title 3\n            pattern: /(^\\s*)###[^#].+/m,\n            lookbehind: true,\n            alias: 'operator'\n          }\n        ]\n      });\n\n      // prism highlight\n      Prism.highlightAll();\n    }\n  }\n\n\n  // get theme color\n  var themeColors = {\n    bootstrap: {\n      primary: \"rgba(51, 122, 183, 0.4)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    cerulean: {\n      primary: \"rgb(47, 164, 231)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    journal: {\n      primary: \"rgba(235, 104, 100, 0.70)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    flatly: {\n      primary: \"rgba(44, 62, 80, 0.70)\",\n      info: \"rgba(52, 152, 219, 0.70)\",\n      success: \"rgba(24, 188, 156, 0.70)\",\n      warning: \"rgba(243, 156, 18, 0.70)\",\n      danger: \"rgba(231, 76, 60, 0.70)\"\n    },\n    readable: {\n      primary: \"rgba(69, 130, 236, 0.4)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    spacelab: {\n      primary: \"rgba(68, 110, 155, 0.25)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    united: {\n      primary: \"rgba(221, 72, 20, 0.30)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    cosmo: {\n      primary: \"rgba(39, 128, 227, 0.7)\",\n      info: \"rgba(153, 84, 187, 0.7)\",\n      success: \"rgba(63, 182, 24, 0.7)\",\n      warning: \"rgba(255, 117, 24, 0.7)\",\n      danger: \"rgba(255, 0, 57, 0.7)\"\n    },\n    lumen: {\n      primary: \"rgba(21, 140, 186, 0.70)\",\n      info: \"rgba(117, 202, 235, 0.90)\",\n      success: \"rgba(40, 182, 44, 0.70)\",\n      warning: \"rgba(255, 133, 27, 0.70)\",\n      danger: \"rgba(255, 65, 54, 0.70)\"\n    },\n    paper: {\n      primary: \"rgba(33, 150, 243, 0.35)\",\n      info: \"rgb(225, 190, 231)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(255, 224, 178)\",\n      danger: \"rgb(249, 189, 187)\"\n    },\n    sandstone: {\n      primary: \"rgba(50, 93, 136, 0.3)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    simplex: {\n      primary: \"rgba(217, 35, 15, 0.25)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    },\n    yeti: {\n      primary: \"rgba(0, 140, 186, 0.298039)\",\n      info: \"rgb(217, 237, 247)\",\n      success: \"rgb(223, 240, 216)\",\n      warning: \"rgb(252, 248, 227)\",\n      danger: \"rgb(242, 222, 222)\"\n    }\n  }\n  function themeColor(color) {\n    return themeColors[_options.theme][color];\n  }\n\n  FlexDashboard.prototype = {\n    constructor: FlexDashboard,\n    init: init,\n    isMobilePhone: isMobilePhone,\n    isFillPage: isFillPage,\n    themeColor: themeColor\n  };\n\n  return FlexDashboard;\n\n})();\n\n// utils\nwindow.FlexDashboardUtils = {\n  resizableImage: function(img) {\n    var src = img.attr('src');\n    var url = 'url(\"' + src + '\")';\n    img.parent().css('background', url)\n                .css('background-size', 'contain')\n                .css('background-repeat', 'no-repeat')\n                .css('background-position', 'center')\n                .addClass('image-container');\n  },\n  setLocation: function(href) {\n    if (history && history.pushState) {\n      history.pushState(null, null, href);\n    } else {\n      window.location.replace(href);\n    }\n    setTimeout(function() {\n        window.scrollTo(0, 0);\n    }, 10);\n    this.manageActiveNavbarMenu();\n  },\n  showPage: function(href) {\n    $('ul.navbar-nav li a[href=\"' + href + '\"]').tab('show');\n    var baseUrl = this.urlWithoutHash(window.location.href);\n    var loc = baseUrl + href;\n    this.setLocation(loc);\n  },\n  showLinkedValue: function(href) {\n    // check for a page link\n    if ($('ul.navbar-nav li a[data-toggle=tab][href=\"' + href + '\"]').length > 0)\n      this.showPage(href);\n    else\n      window.open(href);\n  },\n  urlWithoutHash: function(url) {\n    var hashLoc = url.indexOf('#');\n    if (hashLoc != -1)\n      return url.substring(0, hashLoc);\n    else\n      return url;\n  },\n  urlHash: function(url) {\n    var hashLoc = url.indexOf('#');\n    if (hashLoc != -1)\n      return url.substring(hashLoc);\n    else\n      return \"\";\n  },\n  manageActiveNavbarMenu: function () {\n    // remove active from anyone currently active\n    $('.navbar ul.nav').find('li').removeClass('active');\n    // find the active tab\n    var activeTab = $('.dashboard-page-wrapper.tab-pane.active');\n    if (activeTab.length > 0) {\n      var tabId = activeTab.attr('id');\n      if (tabId)\n        $(\".navbar ul.nav a[href='#\" + tabId + \"']\").parents('li').addClass('active');\n    }\n  }\n};\n\nwindow.FlexDashboard = new FlexDashboard();\n\n// empty content\nwindow.FlexDashboardComponents.push({\n  find: function(container) {\n    if (container.find('p').length == 0)\n      return container;\n    else\n      return $();\n  }\n})\n\n// plot image\nwindow.FlexDashboardComponents.push({\n\n  find: function(container) {\n    return container.children('p')\n                    .children('img:only-child');\n  },\n\n  layout: function(title, container, element, fillPage) {\n    FlexDashboardUtils.resizableImage(element);\n  }\n});\n\n// plot image (figure style)\nwindow.FlexDashboardComponents.push({\n\n  find: function(container) {\n    return container.children('div.figure').children('img');\n  },\n\n  layout: function(title, container, element, fillPage) {\n    FlexDashboardUtils.resizableImage(element);\n  }\n});\n\n// htmlwidget\nwindow.FlexDashboardComponents.push({\n\n  init: function(dashboardContainer) {\n    // trigger \"shown\" after initial layout to force static htmlwidgets\n    // in runtime: shiny to be resized after the dom has been transformed\n    dashboardContainer.on('flexdashboard:layoutcomplete', function(event) {\n      setTimeout(function() {\n        dashboardContainer.trigger('shown');\n      }, 200);\n    });\n  },\n\n  find: function(container) {\n    return container.children('div[id^=\"htmlwidget-\"],div.html-widget');\n  }\n});\n\n// gauge\nwindow.FlexDashboardComponents.push({\n\n  find: function(container) {\n    return container.children('div.html-widget.gauge');\n  },\n\n  flex: function(fillPage) {\n    return false;\n  },\n\n  layout: function(title, container, element, fillPage) {\n\n\n  }\n\n});\n\n// shiny output\nwindow.FlexDashboardComponents.push({\n  find: function(container) {\n    return container.children('div[class^=\"shiny-\"]');\n  }\n});\n\n// datatables\nwindow.FlexDashboardComponents.push({\n  find: function(container) {\n    return container.find('.datatables');\n  },\n  flex: function(fillPage) {\n    return fillPage;\n  }\n});\n\n// bootstrap table\nwindow.FlexDashboardComponents.push({\n\n  find: function(container) {\n    var bsTable = container.find('table.table');\n    if (bsTable.length !== 0)\n      return bsTable;\n    else\n      return container.find('tr.header').parent('thead').parent('table');\n  },\n\n  flex: function(fillPage) {\n    return fillPage;\n  },\n\n  layout: function(title, container, element, fillPage) {\n\n    // alias variables\n    var bsTable = element;\n\n    // fixup xtable generated tables with a proper thead\n    var headerRow = bsTable.find('tbody > tr:first-child > th').parent();\n    if (headerRow.length > 0) {\n      var thead = $('<thead><\/thead>');\n      bsTable.prepend(thead);\n      headerRow.detach().appendTo(thead);\n    }\n\n    // improve appearance\n    container.addClass('bootstrap-table');\n\n    // for fill page provide scrolling w/ sticky headers\n    if (fillPage) {\n      // force scrollbar on overflow\n      container.addClass('flowing-content-shim');\n\n      // stable table headers when scrolling\n      bsTable.stickyTableHeaders({\n        scrollableArea: container\n      });\n    }\n  }\n});\n\n// embedded shiny app\nwindow.FlexDashboardComponents.push({\n\n  find: function(container) {\n    return container.find('iframe.shiny-frame');\n  },\n\n  flex: function(fillPage) {\n    return fillPage;\n  },\n\n  layout: function(title, container, element, fillPage) {\n    if (fillPage) {\n      element.attr('height', '100%');\n    } else {\n      // provide default height if necessary\n      var height = element.get(0).style.height;\n      if (!height)\n        height = element.attr('height');\n      if (!height)\n        element.attr('height', 500);\n    }\n  }\n});\n\n// shiny fillRow or fillCol\nwindow.FlexDashboardComponents.push({\n\n  find: function(container) {\n    return container.find('.flexfill-container');\n  },\n\n  flex: function(fillPage) {\n    return fillPage;\n  },\n\n  layout: function(title, container, element, fillPage) {\n    if (fillPage)\n      element.css('height', '100%');\n    else {\n      // provide default height if necessary\n      var height = element.get(0).style.height;\n      if (height === \"100%\" || height === \"auto\" || height === \"initial\" ||\n          height === \"inherit\" || !height) {\n        element.css('height', 500);\n      }\n    }\n  }\n});\n\n// valueBox\nwindow.FlexDashboardComponents.push({\n\n  type: \"custom\",\n\n  find: function(container) {\n    if (container.find('span.value-output, .shiny-valuebox-output').length)\n      return container;\n    else\n      return $();\n  },\n\n  flex: function(fillPage) {\n    return false;\n  },\n\n  layout: function(title, container, element, fillPage) {\n\n    // alias variables\n    var chartTitle = title;\n    var valueBox = element;\n\n    // add value-box class to container\n    container.addClass('value-box');\n\n    // value paragraph\n    var value = $('<p class=\"value\"><\/p>');\n\n    // if we have shiny-text-output then just move it in\n    var valueOutputSpan = [];\n    var shinyOutput = valueBox.find('.shiny-valuebox-output').detach();\n    if (shinyOutput.length) {\n      valueBox.children().remove();\n      shinyOutput.html(\"&mdash;\");\n      value.append(shinyOutput);\n    } else {\n      // extract the value (remove leading vector index)\n      var chartValue = valueBox.text().trim();\n      chartValue = chartValue.replace(\"[1] \", \"\");\n      valueOutputSpan = valueBox.find('span.value-output').detach();\n      valueBox.children().remove();\n      value.text(chartValue);\n    }\n\n    // caption\n    var caption = $('<p class=\"caption\"><\/p>');\n    caption.append(chartTitle);\n\n    // build inner div for value box and add it\n    var inner = $('<div class=\"inner\"><\/div>');\n    inner.append(value);\n    inner.append(caption);\n    valueBox.append(inner);\n\n    // add icon if specified\n    var icon = $('<div class=\"icon\"><i><\/i><\/div>');\n    valueBox.append(icon);\n    function setIcon(chartIcon) {\n      var iconLib = \"\";\n      var iconSplit = chartIcon.split(\" \");\n      if (iconSplit.length > 1) {\n        iconLib = iconSplit[0];\n        chartIcon = iconSplit.slice(1).join(\" \");\n      } else {\n        var components = chartIcon.split(\"-\");\n        if (components.length > 1)\n          iconLib = components[0];\n      }\n      icon.children('i').attr('class', iconLib + ' ' + chartIcon);\n    }\n    var chartIcon = valueBox.attr('data-icon');\n    if (chartIcon)\n      setIcon(chartIcon);\n\n    // set color based on data-background if necessary\n    var dataBackground = valueBox.attr('data-background');\n    if (dataBackground)\n      valueBox.css('background-color', bgColor);\n    else {\n      // default to bg-primary if no other background is specified\n      if (!valueBox.hasClass('bg-primary') &&\n          !valueBox.hasClass('bg-info') &&\n          !valueBox.hasClass('bg-warning') &&\n          !valueBox.hasClass('bg-success') &&\n          !valueBox.hasClass('bg-danger')) {\n        valueBox.addClass('bg-primary');\n      }\n    }\n\n    // handle data attributes in valueOutputSpan\n    function handleValueOutput(valueOutput) {\n\n      // caption\n      var dataCaption = valueOutput.attr('data-caption');\n      if (dataCaption)\n        caption.html(dataCaption);\n\n      // icon\n      var dataIcon = valueOutput.attr('data-icon');\n      if (dataIcon)\n        setIcon(dataIcon);\n\n      // color\n      var dataColor = valueOutput.attr('data-color');\n      if (dataColor) {\n        if (dataColor.indexOf('bg-') === 0) {\n          valueBox.css('background-color', '');\n          if (!valueBox.hasClass(dataColor)) {\n             valueBox.removeClass('bg-primary bg-info bg-warning bg-danger bg-success');\n             valueBox.addClass(dataColor);\n          }\n        } else {\n          valueBox.removeClass('bg-primary bg-info bg-warning bg-danger bg-success');\n          valueBox.css('background-color', dataColor);\n        }\n      }\n\n      // url\n      var dataHref = valueOutput.attr('data-href');\n      if (dataHref) {\n        valueBox.addClass('linked-value');\n        valueBox.off('click.value-box');\n        valueBox.on('click.value-box', function(e) {\n          window.FlexDashboardUtils.showLinkedValue(dataHref);\n        });\n      }\n    }\n\n    // check for a valueOutputSpan\n    if (valueOutputSpan.length > 0) {\n      handleValueOutput(valueOutputSpan);\n    }\n\n    // if we have a shinyOutput then bind a listener to handle\n    // new valueOutputSpan values\n    shinyOutput.on('shiny:value',\n      function(event) {\n        var element = $(event.target);\n        setTimeout(function() {\n          var valueOutputSpan = element.find('span.value-output');\n          if (valueOutputSpan.length > 0)\n            handleValueOutput(valueOutputSpan);\n        }, 10);\n      }\n    );\n  }\n});\n\n\n\n\n\n\n\nbody {\n  padding: 50px 50px;\n  background-color: white;\n}\n\n.chart-wrapper {\n  background: transparent;\n  border: 2px;\n  padding: 20px;\n}\n\n.navbar{\n  visibility: hidden\n}\n\n\nColumn\n\nAphasia Effect Size Primer\n\n\n\n\n\n\nCorrect Information Unit Web-app\n\n\n\n\n\n\n\nColumn {data-padding = 20}\n\nTBDBr R Package\n\n\n\n\n\n\nGantts for Grants\n\n\n\n\n\n\n\nColumn {data-padding = 20}\n\nLexical Diversity Web-app\n\n\n\n\n\n\nCore Lexicon & Main Concepts Web-app (soon!)\n\n\n\n\n\n\n\n\n\n\n\n$(document).ready(function () {\n\n  // add bootstrap table styles to pandoc tables\n  $('tr.header').parent('thead').parent('table').addClass('table table-condensed');\n\n  // initialize mathjax\n  var script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.src  = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n\n});\n\n$(document).ready(function () {\n  FlexDashboard.init({\n    theme: \"cosmo\",\n    fillPage: false,\n    orientation: \"columns\",\n    storyboard: false,\n    defaultFigWidth: 576,\n    defaultFigHeight: 460,\n    defaultFigWidthMobile: 360,\n    defaultFigHeightMobile: 460,\n    resize_reload: true\n  });\n});\n",
      "last_modified": "2021-04-12T11:13:59-04:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
